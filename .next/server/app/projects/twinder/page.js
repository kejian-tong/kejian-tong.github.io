(()=>{var e={};e.id=516,e.ids=[516],e.modules={7849:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external")},2934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},5403:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external")},4580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},4749:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external")},5869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4993:(e,t,r)=>{"use strict";r.r(t),r.d(t,{GlobalError:()=>o.a,__next_app__:()=>u,originalPathname:()=>p,pages:()=>l,routeModule:()=>h,tree:()=>d});var s=r(482),i=r(9108),n=r(2563),o=r.n(n),a=r(8300),c={};for(let e in a)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(e)&&(c[e]=()=>a[e]);r.d(t,c);let d=["",{children:["projects",{children:["twinder",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(r.bind(r,5998)),"/Users/oliver/Desktop/kejian-tong.github.io/src/app/projects/twinder/page.tsx"]}]},{}]},{}]},{layout:[()=>Promise.resolve().then(r.bind(r,9202)),"/Users/oliver/Desktop/kejian-tong.github.io/src/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(r.bind(r,8206)),"/Users/oliver/Desktop/kejian-tong.github.io/src/app/not-found.tsx"]}],l=["/Users/oliver/Desktop/kejian-tong.github.io/src/app/projects/twinder/page.tsx"],p="/projects/twinder/page",u={require:r,loadChunk:()=>Promise.resolve()},h=new s.AppPageRouteModule({definition:{kind:i.x.APP_PAGE,page:"/projects/twinder/page",pathname:"/projects/twinder",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:d}})},5303:()=>{},5998:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>n,metadata:()=>i});var s=r(5036);let i={title:"Twinder Microservice Case Study",description:"A scalable, event-driven service for high-volume swipe and match workloads"};function n(){return(0,s.jsxs)("article",{className:"prose prose-invert max-w-none",children:[s.jsx("h1",{children:"Twinder Microservice"}),s.jsx("p",{children:"Designing for spikes and consistency across a social matching workload."}),s.jsx("img",{src:"/image/crefin.jpg",alt:"Twinder cover"}),s.jsx("h2",{children:"Role"}),s.jsx("p",{children:"Backend Engineer"}),s.jsx("h2",{children:"Highlights"}),(0,s.jsxs)("ul",{children:[s.jsx("li",{children:"CQRS-aligned design separated write-heavy swipe ingestion from read-optimized match queries"}),s.jsx("li",{children:"Kafka for event streaming, RabbitMQ for targeted fanout, Redis for hot paths"}),s.jsx("li",{children:"MongoDB with strategic compound indexes to balance write throughput and query performance"}),s.jsx("li",{children:"Horizontal scaling on AWS EC2 with autoscaling policies and health probes"})]}),s.jsx("h2",{children:"Architecture"}),s.jsx("p",{children:"The system ingests swipe events at high volume, emitting them to Kafka topics. A set of workers transforms events, updating projections and pushing match candidates into Redis. RabbitMQ is used for targeted fan-out to user-specific queues for real-time updates."}),s.jsx("h2",{children:"Notes"}),s.jsx("p",{children:"If you want to learn more or see code, reach out—happy to walk through design choices and tradeoffs."}),s.jsx("p",{children:s.jsx("a",{href:"/#projects",children:"← Back to projects"})})]})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[886,541],()=>r(4993));module.exports=s})();